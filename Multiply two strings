class Solution {
    public String multiplyStrings(String s1, String s2) {
        
        
        boolean isNegative=false;
        
        if(s1.charAt(0)=='-'){
            isNegative = !isNegative;
            s1 = s1.substring(1);
        }
        
        if(s2.charAt(0)=='-'){
            isNegative  =!isNegative;
            s2 = s2.substring(1);
        }
        
        s1 = removeLeadingZeros(s1);
        s2 = removeLeadingZeros(s2);
        
        if(s1.equals("0") || s2.equals("0")) return "0";
        
        int n=s1.length(),m=s2.length();
        
        int[] res = new int[n+m];
        
        for(int i =n-1;i>=0;i--){
            for(int j=m-1;j>=0;j--){
                int mul = (s1.charAt(i)-'0')*(s2.charAt(j)-'0');
                int sum = mul+res[i+j+1];
                
                res[i+j+1]=sum%10;
                res[i+j]+=sum/10;
            }
        }
        
        StringBuilder sb = new StringBuilder();
        for(int num:res){
            if(sb.length()==0 && num==0){
                continue;
            }
            sb.append(num);
        }
        
        if(isNegative){
            sb.insert(0,'-');
        }
        
        return sb.toString();
    }
    
    private String removeLeadingZeros(String str){
        int i=0;
        
        while(i<str.length()-1 && str.charAt(i) == '0'){
            i++;
        }
        
        return str.substring(i);
    }
}
